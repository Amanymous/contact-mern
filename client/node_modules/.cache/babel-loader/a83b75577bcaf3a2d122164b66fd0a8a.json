{"ast":null,"code":"var _jsxFileName = \"/home/aman/Desktop/todoApp/client/src/components/contacts/ContactForm.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n  const {\n    addContact,\n    current,\n    clearCurrent,\n    updateContact\n  } = contactContext; // Note: useEffect mimics the life cycle method of componentDidMount.\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        type: \"personal\"\n      });\n    }\n  }, [contactContext, current]);\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    type: \"personal\"\n  });\n  const {\n    name,\n    email,\n    phone,\n    type\n  } = contact;\n\n  const onChange = event => setContact({ ...contact,\n    [event.target.name]: event.target.value\n  });\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (current === null) {\n      addContact(contact);\n    } else {\n      updateContact(contact);\n    }\n\n    setContact({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      type: \"personal\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, current ? \"Edit Contact\" : \"Add Contact\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Phone\",\n    name: \"phone\",\n    value: phone,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Contact Type\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    checked: type === \"personal\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), \" \", \"Personal\", \" \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    checked: type === \"professional\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), \" \", \"Professional\", \" \", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: current ? \"Update Contact\" : \"Add Contact\",\n    className: \"btn btn-primary brn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })), current && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Clear\")));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/aman/Desktop/todoApp/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","current","clearCurrent","updateContact","setContact","name","email","phone","type","clearAll","contact","onChange","event","target","value","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { addContact, current, clearCurrent, updateContact } = contactContext;\n\n  // Note: useEffect mimics the life cycle method of componentDidMount.\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        type: \"personal\",\n      });\n    }\n  }, [contactContext, current]);\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    type: \"personal\",\n  });\n\n  const { name, email, phone, type } = contact;\n\n  const onChange = (event) =>\n    setContact({ ...contact, [event.target.name]: event.target.value });\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (current === null) {\n      addContact(contact);\n    } else {\n      updateContact(contact);\n    }\n    setContact({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      type: \"personal\",\n    });\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <h2 className=\"text-primary\">\n        {current ? \"Edit Contact\" : \"Add Contact\"}\n      </h2>\n      <input\n        type=\"text\"\n        placeholder=\"Name\"\n        name=\"name\"\n        value={name}\n        onChange={onChange}\n      />\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        name=\"email\"\n        value={email}\n        onChange={onChange}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Phone\"\n        name=\"phone\"\n        value={phone}\n        onChange={onChange}\n      />\n      <h5>Contact Type</h5>\n      <input\n        type=\"radio\"\n        name=\"type\"\n        value=\"personal\"\n        checked={type === \"personal\"}\n        onChange={onChange}\n      />{\" \"}\n      Personal{\" \"}\n      <input\n        type=\"radio\"\n        name=\"type\"\n        value=\"professional\"\n        checked={type === \"professional\"}\n        onChange={onChange}\n      />{\" \"}\n      Professional{\" \"}\n      <div>\n        <input\n          type=\"submit\"\n          value={current ? \"Update Contact\" : \"Add Contact\"}\n          className=\"btn btn-primary brn-block\"\n        />\n      </div>\n      {current && (\n        <div>\n          <button className=\"btn btn-light btn-block\" onClick={clearAll}>\n            Clear\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}